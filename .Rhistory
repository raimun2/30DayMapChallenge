p <- ggmap(map)  +
geom_tile(data=test_df, aes(x=lon, y=lat, fill=ele), alpha=0.8) +
scale_fill_gradientn(colors=paleta, name = "Elevation (masl)") +
theme_void() +
ggtitle("Training negative space") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0.5),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggsave(p, "maps/day29_NULL.png", units="in", width=13, height = 11.25, dpi=300)
ggsave(p, "maps/day29_NULL.png", units="in", width=13, height = 11.25, dpi=300, device = "png")
ggsave(p, "maps/day29_null.png", units="in", width=13, height = 11.25, dpi=300)
ggsave(p, "maps/day29_nul.png", units="in", width=13, height = 11.25, dpi=300)
? ggsave
ggsave(plot = p, "maps/day29_null.png", units="in", width=13, height = 11.25, dpi=300)
m_inv <- as.raster(apply(map, 2, invert))
invert <- function(x) rgb(t(255-col2rgb(x))/255)
m_inv <- as.raster(apply(map, 2, invert))
m_inv[is.na(r)] <- NA
class(m_inv) <- class(map)
attr(m_inv, "bb") <- attr(map, "bb")
ggmap(map)
ggmap(m_inv)
m_inv[is.na(r)]
is.na(r)
m_inv[is.na(r[])] <- NA
class(m_inv) <- class(map)
m_inv <- as.raster(apply(map, 2, invert))
m_inv[is.na(r[])] <- NA
class(m_inv) <- class(map)
attr(m_inv, "bb") <- attr(map, "bb")
ggmap(m_inv)
m_inv <- as.raster(apply(map, 2, invert))
m_inv2 <- projectRaster(m_inv, crs=crs(r))
crs(r)
extent(m_inv) <- extent(r)
m_inv <- as.raster(apply(map, 2, invert))
extent(m_inv) <- extent(r)
class(s)
class(r)
class(m_inv)
extent(m_inv) <- extent(as.raster(r))
extent(r)
extent(m_inv)
class(m_inv) <- class(r)
extent(m_inv) <- extent(r)
m_inv <- resample(r, m_inv, method = 'bilinear')
m_inv <- resample(r, m_inv)
m_inv <- resample(as.raster(r), m_inv)
m_inv <- resample(as.raster(r), as.raster(m_inv) )
? resample
m_inv <- raster::resample(r, m_inv)
m_inv <- raster::resample( m_inv, r)
m_inv <- as.raster(apply(map, 2, invert))
class(m_inv) <- class(r)
extent(r) <- extent(m_inv)
extent(r)
extent(m_inv)
m_inv <- as.raster(apply(map, 2, invert))
extent(m_inv)
projectRaster(from = m_inv, to = r)
projectRaster(from = r, to = m_inv)
r <- rasterFromXYZ(NULL_STREAMS[,c("lon","lat","value")])
r[r>=0] <- 0
r[is.na(r)] <- 1
r[r==0] <- NA
invert <- function(x) rgb(t(255-col2rgb(x))/255)
m_inv <- as.raster(apply(map, 2, invert))
m_inv2 <- raster::resample( m_inv, r)
m_inv <- raster(m_inv)
m_inv <- raster::raster(m_inv)
m_inv <- raster(apply(map, 2, invert))
m_inv <- as.raster(apply(map, 2, invert))
m_inv <- raster(map)
m_inv <- as.raster(apply(map, 2, 1))
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x)))))
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
m_inv <- raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
raster(m_inv)
rasterize(m_inv)
class(m_inv) <- class(r)
class(m_inv)
class(r)
extent(r)
extent(m_inv)
attr(m_inv) <- attr(map)
attr(m_inv)
? attr
attr(m_inv, "all") <- attr(map, "bb")
attr(m_inv, "all")
attr(m_inv, "a") <- attr(map, "bb")
attr(m_inv, "a")
attr(map, "a")
attr(map, "all")
attributes(map)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
r <- rasterFromXYZ(NULL_STREAMS[,c("lon","lat","value")])
r[r>=0] <- 0
r[is.na(r)] <- 1
r[r==0] <- NA
attributes(r)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
class(m_inv) <- class(r)
attributes(m_inv) <- attributes(r)
plot(m_inv)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
plot(m_inv)
? rasterFromXYZ
res(m_inv)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
res(m_inv)
class(m_inv) <- class(r)
res(m_inv)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
res(m_inv)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
res(m_inv)
raster::res(m_inv)
m_inv <- as.raster(apply(map, 2, function(x) mean(t(col2rgb(x))/255)))
plot(m_inv)
res(m_inv)
m_inv <- raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
m_inv <- raster(apply(map, 2, function(x) factor(rgb(t(col2rgb(x))/255))))
m_inv <- raster(apply(map, 2, function(x) as.factor(rgb(t(col2rgb(x))/255))))
r <- rasterFromXYZ(NULL_STREAMS[,c("lon","lat","value")])
? raster
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
res(m_inv)
attributes(m_inv)
m_inv$dim
attributes(m_inv)$dim
res(r)
? rasterFromXYZ
rr <- raster(nrow=704, ncol=730)
r <- rasterFromXYZ(rr, NULL_STREAMS[,c("lon","lat","value")])
rr <- raster(nrow=704, ncol=730, xmn=0, xmx=10, ymn=0, ymx=10, crs="")
r <- rasterFromXYZ(rr, NULL_STREAMS[,c("lon","lat","value")])
maptype <- 'terrain'
r <- rasterFromXYZ(NULL_STREAMS[,c("lon","lat","value")])
maptype <- 'terrain'
map <- ggmap::get_stamenmap(bbox(r), maptype = maptype, zoom=12)
ggmap(map)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
class(m_inv) <- class(map)
attr(m_inv, "bb") <- attr(map, "bb")
ggmap(m_inv)
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(255-col2rgb(x))/255)))
class(m_inv) <- class(map)
attr(m_inv, "bb") <- attr(map, "bb")
ggmap(m_inv)
paleta <- (grDevices::colorRampPalette(c("#6AA85B", "#D9CC9A", "#FFFFFF")))(256)
p <- ggmap(m_inv)  +
geom_tile(data=test_df, aes(x=lon, y=lat, fill=ele), alpha=0.8) +
scale_fill_gradientn(colors=paleta, name = "Elevation (masl)") +
theme_void() +
ggtitle("Negative space") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0.5),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggsave(plot = p, "maps/day29_null.png", units="in", width=13, height = 11.25, dpi=300)
pacman::p_load(rayshader, raster, sf, sp, elevatr, tidyverse, ggmap, GPStream, geosphere, grid, gganimate, loscolores, RColorBrewer, cowplot)
NULL_STREAMS <- read_rds("data/streams_rai1058.rds")$streams %>%
uniform_stream() %>%
filter(lat <= -33.3, lat >= -33.55,
lon <= -70.4, lon >= -70.65)
prj_dd = "+proj=longlat +ellps=WGS84 +datum=WGS84  +no_defs"
spatialstream <- SpatialPoints(NULL_STREAMS[,c("lon","lat")], proj4string = CRS(prj_dd))
maptype <- 'terrain'
map <- ggmap::get_stamenmap(bbox(spatialstream), maptype = maptype, zoom=13)
maptype <- 'stamen'
map2 <- ggmap::get_stamenmap(bbox(spatialstream), maptype = maptype, zoom=13)
rast_base <- raster(nrows= attributes(map[])$dim[1], ncols = attributes(map[])$dim[2], ext = extent(spatialstream))
sp_rast <- rasterize(spatialstream, rast_base, field=1)
mat_pts <- calc(sp_rast, function(x) is.na(x))
mat_pts <- as.matrix(mat_pts, ncol = attributes(map[])$dim[2])
m_inv <- as.raster(apply(map, 2, function(x) rgb(t(255-col2rgb(x))/255)))
mat_inv <- as.matrix(m_inv, ncol = attributes(map[])$dim[2])
m_ras <- as.raster(apply(map, 2, function(x) rgb(t(col2rgb(x))/255)))
mat_ras <- as.matrix(map2, ncol = attributes(map[])$dim[2])
m_neg <- ifelse(mat_pts, mat_inv ,mat_ras)
maptype <- 'toner-background'
map2 <- ggmap::get_stamenmap(bbox(spatialstream), maptype = maptype, zoom=13)
m_ras <- as.raster(apply(map2, 2, function(x) rgb(t(col2rgb(x))/255)))
mat_ras <- as.matrix(m_ras, ncol = attributes(map[])$dim[2])
m_neg <- ifelse(mat_pts, mat_inv ,mat_ras)
ras_neg <- as.raster(m_neg)
class(ras_neg) <- class(map)
attr(ras_neg, "bb") <- attr(map, "bb")
ggmap(ras_neg)
ggmap(ras_neg)  +
#  geom_point(data=NULL_STREAMS, aes(x=lon, y=lat), col="white", fill="white", alpha=0.1, pch=".", size= 2) +
theme_void() +
ggtitle("Negative space") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0.5),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggmap(ras_neg)  +
#  geom_point(data=NULL_STREAMS, aes(x=lon, y=lat), col="white", fill="white", alpha=0.1, pch=".", size= 2) +
theme_void() +
ggtitle("Negative space") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
p <- ggmap(ras_neg)  +
#  geom_point(data=NULL_STREAMS, aes(x=lon, y=lat), col="white", fill="white", alpha=0.1, pch=".", size= 2) +
theme_void() +
ggtitle("Negative space") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggsave(plot = p, "maps/day29_null.png", units="in", width=13, height = 11.25, dpi=300)
## metadatastreams
pacman::p_load(png, raster, ggmap, tidyverse)
maps <- list.files("maps", "*png")
map <- get_stamenmap(source = "stamen")
cols_mash <- 400
rows_mash <- 400
bbox <- attr(map, "bb")
bbox$ur.lon <- cols_mash/rows_mash * (bbox$ur.lat - bbox$ll.lat) +  bbox$ll.lon
attr(map, "bb") <- bbox
colors <- NULL
for(i in 1:length(maps)){
mapn <- png::readPNG(paste0("maps/",maps[i]))
mapn <- as.raster(mapn[,,1:3])
resamp <- mapn[round((1:rows_mash)*nrow(mapn)/rows_mash),round((1:cols_mash)*ncol(mapn)/cols_mash)]
colors <- c(colors, as.vector(resamp))
}
4160000/400
4160000/4000
4160000/3000
4160000/2000
cols_n <- col2rgb(colors)
hsv <- t(rgb2hsv(cols_n)) %>% as.data.frame()
hsv <- hsv[order(hsv$h, hsv$v),]
colors_ordered <- rgb(hsv)
map_col <- as.raster(colors_ordered, ncol=2000)
class(map_col) <- class(map)
attr(map_col, "bb") <- attr(map, "bb")
ggmap(map_col)
colors <- unique(colors)
303064
sqrt(303064)
303064/500
500*600
cols_n <- col2rgb(colors)
hsv <- t(rgb2hsv(cols_n)) %>% as.data.frame()
hsv <- hsv[order(hsv$h, hsv$v),]
colors_ordered <- rgb(hsv)
map_col <- as.raster(colors_ordered[500*600], ncol=600)
class(map_col) <- class(map)
attr(map_col, "bb") <- attr(map, "bb")
ggmap(map_col)
colors
cols_n <- col2rgb(colors)
hsv <- t(rgb2hsv(cols_n)) %>% as.data.frame()
hsv <- hsv[order(hsv$h, hsv$v),]
colors_ordered <- rgb(hsv)
colors_ordered
map_col <- as.raster(colors_ordered[500*600], ncol=600)
map_col
(colors_ordered
)
map_col <- as.raster(colors_ordered[1:300000], ncol=600)
class(map_col) <- class(map)
attr(map_col, "bb") <- attr(map, "bb")
ggmap(map_col)
cols_mash <- 500
rows_mash <- 400
bbox <- attr(map, "bb")
bbox$ur.lon <- cols_mash/rows_mash * (bbox$ur.lat - bbox$ll.lat) +  bbox$ll.lon
attr(map, "bb") <- bbox
colors <- NULL
for(i in 1:length(maps)){
mapn <- png::readPNG(paste0("maps/",maps[i]))
mapn <- as.raster(mapn[,,1:3])
resamp <- mapn[round((1:rows_mash)*nrow(mapn)/rows_mash),round((1:cols_mash)*ncol(mapn)/cols_mash)]
colors <- c(colors, as.vector(resamp))
}
colors <- unique(colors)
cols_n <- col2rgb(colors)
hsv <- t(rgb2hsv(cols_n)) %>% as.data.frame()
hsv <- hsv[order(hsv$h, hsv$v),]
colors_ordered <- rgb(hsv)
334023 / 600
556*600
map_col <- as.raster(colors_ordered[1:333600], ncol=600)
class(map_col) <- class(map)
attr(map_col, "bb") <- attr(map, "bb")
ggmap(map_col)
ggmap(map_col) +
theme_void() +
ggtitle("Negative space") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0, margin=margin(t=40,b=-30)),
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0, margin=margin(t=40,b=-30)))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-30), col = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-30), color = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=50,b=-30), color = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-30), color = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-40), color = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50), color = "white"))
ggsave("maps/day30_meta.png", units="in", width=13, height = 11.25, dpi=300)
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50, l=30), color = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50, l=-30), color = "white"))
ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50), color = "white"))
p <- ggmap(map_col) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50), color = "white"))
basemap <- ggmap(p, extent = "device")
basemap <- ggmap(map_col, extent = "device")
basemap
basemap <- ggmap(map_col, extent = "device")
basemap
ggmap(basemap) +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=40,b=-50), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=0,b=-50), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=30, face = "bold", hjust = 0,
margin=margin(t=0,b=-60), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(t=0,b=-60), color = "white"))
ggsave("maps/day30_meta.png", units="in", width=13, height = 11.25, dpi=300)
ggsave("maps/day30_meta.png", units="in", width=13, height = 11, dpi=300)
ggsave("maps/day30_meta.png", units="in", width=12, height = 11, dpi=300)
? margin
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,-60), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,0,-60), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-60,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(5,0,-60,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(50,0,-60,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-60,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,50,-60,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-80,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-0,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-50,0), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-50,30), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-80,30), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-80,-30), color = "white"))
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=60, face = "bold", hjust = 0,
margin=margin(0,0,-80,0), color = "white"))
ggsave("maps/day30_meta.png", units="in", width=12, height = 11, dpi=300)
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=100, face = "bold", hjust = 0,
margin=margin(0,0,-80,0), color = "white"))
ggsave("maps/day30_meta.png", units="in", width=12, height = 11, dpi=300)
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=100, face = "bold", hjust = 0,
margin=margin(0,0,-100,0), color = "white"))
ggsave("maps/day30_meta.png", units="in", width=12, height = 11, dpi=300)
basemap +
theme_void() +
ggtitle("Color Map") +
theme(plot.title = element_text(size=150, face = "bold", hjust = 0,
margin=margin(0,0,-150,0), color = "white"))
ggsave("maps/day30_meta.png", units="in", width=12, height = 11, dpi=300)
acantilados <- read_rds("data/streams_rai600.RData")$streams %>%
filter(id == 3108817153) %>%
rename_stream()
acantilados <- read_rds("data/streams_rai600.RData")$streams %>%
filter(id == 3108817153) %>%
uniform_stream()
pacman::p_load(GPStream)
acantilados <- read_rds("data/streams_rai600.RData")$streams %>%
filter(id == 3108817153) %>%
uniform_stream()
detach("package:GPStream", unload = TRUE)
remotes::install_github("raimun2/GPStream")
pacman::p_load(GPStream)
acantilados <- read_rds("data/streams_rai600.RData")$streams %>%
filter(id == 3108817153) %>%
uniform_stream()
zoom = 8
acantilados_espacial <- SpatialPoints(coords=acantilados[,1:2], proj4string=CRS("+proj=longlat +datum=WGS84"))
raster_acant <- get_elev_raster(acantilados_espacial, zoom)
pacman::p_load(GPStream, elevatr)
raster_acant <- get_elev_raster(acantilados_espacial, zoom)
pacman::p_load(GPStream, elevatr, tidyverse)
pacman::p_load(GPStream, elevatr, tidyverse, ggmap)
? inset_raster
ggplot() +
inset_raster(raster_acant)
ee_install(py_env = "rgee")
