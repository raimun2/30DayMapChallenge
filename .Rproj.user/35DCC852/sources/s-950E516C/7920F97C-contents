library(tidyverse)
library(ggridges)
library(GPStream)

options(scipen =999)
set.seed(42)

streams <- readRDS("streams_rai600.RData")

data <- streams$streams

data <- merge(data, aggregate(distance~id,data,max) %>%  
                rename(max_dist = distance), by = "id")

data <- merge(data, aggregate(elev~id,data,min) %>%  
                rename(min_elev = elev), by = "id")

data <- merge(data, aggregate(elev~id,data,max) %>%  
                rename(max_elev = elev), by = "id")

data$percentage <- data$distance / data$max_dist

data <- data %>% differential_stream()

idsfeos <- data %>% filter(abs(delta_elev) > 100) %>% 
  select(id) %>% unique()

data <- data %>% filter(!(id %in% idsfeos$id))



data_plot <- data %>%  filter(max_dist > 21)

data_plot$min_elev <- ifelse(data_plot$min_elev< 0,0 , data_plot$min_elev)

min_elev <- sort(unique(data_plot$min_elev))
new_altura <- cbind("min_elev" = min_elev,"new_elev" = 1:length(min_elev)*max(data_plot$min_elev)/length(min_elev), "rand" = runif(length(min_elev), -1/4, 1/4))

data_plot <- merge(data_plot, new_altura, by = "min_elev")

data_plot$elev_gain <- ifelse(data_plot$elev - data_plot$min_elev <0 ,0 ,data_plot$elev - data_plot$min_elev)



data_plot$percentage <- (data_plot$percentage + data_plot$rand) 

data_plot <- data_plot %>% filter(percentage >= 0, percentage <= 1)

data_plot <- merge(data_plot, aggregate(distance~id,data_plot,max) %>%  
                rename(max_time = distance), by = "id")

data_plot <- merge(data_plot, aggregate(distance~id,data_plot,min) %>%  
                     rename(min_time = distance), by = "id")

data_plot$percentage <- (data_plot$distance - data_plot$min_time) / (data_plot$max_time - data_plot$min_time)



stars <- data_plot %>% filter(complete.cases(cadence)) %>% select(cadence) 

stars$cadence <-  median(data_plot$new_elev) + runif(nrow(stars), 0, sd(data_plot$new_elev))*(stars$cadence - min(stars$cadence))

stars$percentage <- (1:nrow(stars))/nrow(stars)

#data_points <- data.frame( x = runif(200,0,1), y = runif(200,6000,15000)) 


data_points <- sample_n(stars,3000)
data_stars <-  sample_n(stars,200)

ggplot() + 
  geom_point(data = data_points, 
             aes(x=percentage, 
                 y=cadence), 
             col="white",
             fill="yellow",
             size=2) +
  geom_point(data = data_stars, 
             aes(x=percentage, 
                 y=cadence), 
             col="white",
             pch=8,
             size=3) +
  geom_ridgeline_gradient(data  = data_plot, 
                          aes(x = percentage, 
                              y = new_elev, 
                              height = elev_gain, 
                              scale = 3,
                              fill = stat(height), 
                              group = id), 
                          col = "white") +
  scale_fill_viridis_c(option = "B", 
                       direction = -1) + 
  theme_void() +
  theme(legend.position = "none") +
  theme(plot.background = element_rect(fill = "black")) +
  ylim(0,6*max(data_plot$min_elev))



ggsave("montanas1.png", units="in", width=25, height=15, dpi=300)
