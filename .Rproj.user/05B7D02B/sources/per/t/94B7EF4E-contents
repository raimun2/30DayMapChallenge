


add_overlay(sphere_shade(map8_small, texture = "desert", 
                         zscale=4, colorintensity = 5), alphalayer=0.5) %>%
  add_shadow(lamb_shade(map8_small,zscale=6), 0.5) %>%
  add_shadow(ambient_shade(map8_small), 0) %>%
  add_shadow(texture_shade(map8_small,detail=8/10,contrast=9,brightness = 11), 0.1) %>% 
  plot_3d(map8_small,zscale=50,
          shadowcolor="#40310a", watercolor="#233aa1", background = "tan",
          theta=0,  phi=90, zoom=1, fov=0)

## highways
osm_bbox <- extent(raster_map8)[c(1,3,2,4)]

bryce_highway = opq(osm_bbox) %>% 
  add_osm_feature("highway") %>% 
  osmdata_sf() 

bryce_lines = st_transform(bryce_highway$osm_lines, crs=crs(raster_map8))

ggplot(bryce_lines,aes(color=osm_id)) + 
  geom_sf() +
  theme(legend.position = "none") +
  labs(title = "Open Street Map `highway` attribute in Bryce Canyon National Park")

cajon_espacial <- st_as_sf(cajon_espacial)

base_map 

render_path(extent = attr(raster_map8,"extent"),
            lat = unlist(cajon_map8$lat), long = unlist(cajon_map8$lon),
            altitude = cajon_map8$ele, zscale=50,color="white", antialias=TRUE)
render_highquality(line_radius = 1,sample_method="stratified", clear=TRUE)



# generate_line_overlay(bryce_lines,extent =  extent(raster_map8),
#                       heightmap = bryce_small))
#%>% 
add_overlay(generate_point_overlay(cajon_espacial, color="red", size=12, 
                                   attr(raster_map8,"extent"), heightmap = cajon_map8$ele))


save_png(filename_map, filename = "maps/day09_monochrome.png", 
         title_text = "Monochromatic view of the central Andes",
         title_color = "white", title_offset = c(50, 50),
         title_size = 50) 



pacman::p_load(rgee, reticulate)

ee_install() 

ee_check()

ee_Initialize()

library(tensorflow)
ee_install(py_env = "rgee")


py_versions_windows()

py_config()

reticulate::conda_install(python_version = "3.9", force=TRUE, packages = c("numpy", "earthengine-api"))


pacman::p_load(tidyverse)
paletas <- read_rds("data/palettes.rds")

paletas <- paletas[,-65]
rownames(paletas) <- NULL

paletasunidim <- as.vector(paletas)

df <- matrix(runif(1:3000),ncol=3) %>% as_tibble()
colnames(df) <- c("lon","lat","value")
df$value <- factor(1:1000)

ggplot(df, aes(lon,lat, fill = (value))) + geom_hex() + theme(legend.position = "none") +
  scale_fill_manual(values = paletas)



pacman::p_load(GPStream, elevatr, tidyverse, ggmap)

acantilados <- read_rds("data/streams_rai600.RData")$streams %>% 
  filter(id == 3108817153) %>% 
  uniform_stream()

zoom = 8

acantilados_espacial <- SpatialPoints(coords=acantilados[,1:2], proj4string=CRS("+proj=longlat +datum=WGS84"))

raster_acant <- get_elev_raster(acantilados_espacial, zoom)

ggplot() +
  inset_raster(raster_acant)


ggraster <- function(raster){
  map <- ggmap::get_stamenmap(source = "stamen")  
  
  
}
